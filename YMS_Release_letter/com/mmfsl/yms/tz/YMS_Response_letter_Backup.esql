BROKER SCHEMA com.mmfsl.yms.tz


CREATE COMPUTE MODULE YMS_Response_letter_Backup
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE EV REFERENCE TO Environment.Variables;
		--CREATE LASTCHILD OF OutputRoot DOMAIN'JSON' PARSE(InputRoot.BLOB.BLOB CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		--SET OutputRoot.JSON.Data[]	=	EV.Record[];
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON';
		
		SET OutputRoot.JSON.Data.query	=	EV.Query;
		
		SET OutputRoot.JSON.Data.Header_info	=	Environment.Header.Call_back_url;
		
		SET OutputRoot.JSON.Data.YMS_ID	=	EV.YmsId;
		SET OutputRoot.JSON.Data.CONTRACT_NO	=	EV.ContractNo;
		SET OutputRoot.JSON.Data.SERVICE_NAME	=	'Response Letter';
				
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		
		SET OutputRoot.JSON.Data.STATUS	=	'Queued for Processing';
		SET EV.Response	=	OutputRoot.JSON.Data;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
