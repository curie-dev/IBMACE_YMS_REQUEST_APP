BROKER SCHEMA com.mmfsl.yms.tz


CREATE COMPUTE MODULE YMS_Response_letter_Response
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
			SET OutputRoot.HTTPResponseHeader."Content-Type"	=	'application/json';
		DECLARE EV REFERENCE TO Environment.Variables;
		
		CREATE LASTCHILD OF OutputRoot DOMAIN'JSON';
		
		IF EXISTS(InputRoot.HTTPResponseHeader[]) THEN
				SET OutputRoot.JSON.Data.httpCode 			=	InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code";
				
			IF InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code"	<>	200 THEN
				SET OutputRoot.JSON.Data.httpMessage		=	InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Line";
				SET OutputRoot.JSON.Data.moreInformation	=	CAST(InputRoot.BLOB.BLOB AS CHARACTER CCSID 1208 ENCODING 546);
			
			ELSE
				SET OutputRoot.JSON.Data.httpMessage		=	InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Line";
				SET OutputRoot.JSON.Data.moreInformation	=	TRIM(CAST(InputRoot.BLOB.BLOB AS CHARACTER CCSID 1208 ENCODING 546));
			END IF;	
		ELSEIF	EV.Response.STATUS='Queued for Processing' THEN
				SET OutputRoot.JSON.Data.httpCode			=	500;
				SET OutputRoot.JSON.Data.httpMessage		=	'Internal Server Error';
				SET OutputRoot.JSON.Data.moreInformation	=	'Queued For Processing';
			
		END IF;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
